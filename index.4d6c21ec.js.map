{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAe,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IACzC,EAAU,EAAE,CAElB,EAAS,OAAO,CAAC,SAAC,CAAlB,EAEE,IAAM,EAAM,OADG,EAAQ,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,KAG1D,EAAQ,IAAI,CAAC,EACf,GA0BA,AAFuB,SAAS,aAAa,CAAC,qBAE/B,SAAS,CAAG,GAAgB,MAAA,CAAb,AAxB9B,WAGE,IAAK,IAFD,EAAM,EAED,EAAI,EAAG,EAAI,EAAQ,MAAM,CAAE,IAClC,GAAO,CAAO,CAAC,EAAE,CAGnB,OAAO,EAAI,cAAc,CAAC,QAC5B,KAoBA,AAF2B,SAAS,aAAa,CAAC,uBAE/B,SAAS,CAAG,GAAoB,MAAA,CAAjB,AAlBlC,WAGE,IAAK,IAFD,EAAU,EAEL,EAAI,EAAG,EAAI,EAAQ,MAAM,CAAE,IAClC,GAAW,CAAO,CAAC,EAAE,CAKvB,MAAO,AAFY,CAAA,EAAU,EAAQ,MAAM,AAAN,EAEnB,cAAc,CAAC,QACnC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar elements = _to_consumable_array(document.querySelectorAll(\".population\"));\nvar numbers = [];\nelements.forEach(function(element) {\n    var numStr = element.textContent.trim().split(\",\").join(\"\");\n    var num = Number(numStr); // Преобразуем строку в число\n    numbers.push(num);\n});\nfunction sumNumbers() {\n    var sum = 0;\n    for(var i = 0; i < numbers.length; i++)sum += numbers[i];\n    return sum.toLocaleString(\"en-US\");\n}\nfunction averageNumbers() {\n    var average = 0;\n    for(var i = 0; i < numbers.length; i++)average += numbers[i];\n    var avarageNum = average / numbers.length;\n    return avarageNum.toLocaleString(\"en-US\");\n}\nvar textSumContent = document.querySelector(\".total-population\"); // sum all\ntextSumContent.innerHTML = \"\".concat(sumNumbers());\nvar textAverageContent = document.querySelector(\".average-population\"); // avg\ntextAverageContent.innerHTML = \"\".concat(averageNumbers());\n\n//# sourceMappingURL=index.4d6c21ec.js.map\n","'use strict';\n\nconst elements = [...document.querySelectorAll('.population')];\nconst numbers = [];\n\nelements.forEach((element) => {\n  const numStr = element.textContent.trim().split(',').join('');\n  const num = Number(numStr); // Преобразуем строку в число\n\n  numbers.push(num);\n});\n\nfunction sumNumbers() {\n  let sum = 0;\n\n  for (let i = 0; i < numbers.length; i++) {\n    sum += numbers[i];\n  }\n\n  return sum.toLocaleString('en-US');\n}\n\nfunction averageNumbers() {\n  let average = 0;\n\n  for (let i = 0; i < numbers.length; i++) {\n    average += numbers[i];\n  }\n\n  const avarageNum = average / numbers.length;\n\n  return avarageNum.toLocaleString('en-US');\n}\n\nconst textSumContent = document.querySelector('.total-population'); // sum all\n\ntextSumContent.innerHTML = `${sumNumbers()}`;\n\nconst textAverageContent = document.querySelector('.average-population'); // avg\n\ntextAverageContent.innerHTML = `${averageNumbers()}`;\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","elements","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","numbers","forEach","element","num","Number","textContent","trim","split","join","push","textSumContent","querySelector","innerHTML","concat","sumNumbers","sum","toLocaleString","textAverageContent","averageNumbers","average","avarageNum"],"version":3,"file":"index.4d6c21ec.js.map"}